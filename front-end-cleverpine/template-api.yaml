openapi: 3.0.0

info:
  version: 1.0.0
  title: MareshkiFinance Service - User model
  description: This is a Template YAML For mareshkifinance

servers:
  - url: http://localhost:8080
    description: Local machine

tags:
  - name: "Users"
    description: All User related methods
  - name: "System"
    description: All system methods

paths:
  /api/system/health:
    get:
      summary: This is a healtheck method
      description: This method returns a 200 respponse for healthceck purposes
      tags:
        - "System"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: string
  /api/system/info:
    get:
      summary: This is a version method
      description: This method returns the current application version
      tags:
        - "System"
      responses:
        "200":
          $ref: "#/components/responses/SystemInfoResponse"

  /api/users/login:
    post:
      summary: This is a user login method
      description: This is a method for user login
      tags:
        - "Users"
      operationId: login
      requestBody:
        description: This is a user login request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/users/register:
    post:
      summary: This is a user registration method
      description: This is a method for user registration
      tags:
        - "Users"
      operationId: register
      requestBody:
        description: This is a user registration request body
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegistration"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "409":
          description: "Conflict"
        "422":
          description: "Unprocessable Entity"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/users/{userId}:
    get:
      summary: Get user profile information
      description: Retrieves the profile information of a user by their unique ID
      tags:
        - "Users"
      operationId: getUserProfile
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "OK - Successfully retrieved user profile"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

    put:
      summary: Update user profile
      description: Allows a user to update their profile information
      tags:
        - "Users"
      operationId: updateUserProfile
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: integer
            format: int64
      requestBody:
        description: This is the request body to update user profile
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfileUpdate"
      responses:
        "200":
          description: "OK - Successfully updated user profile"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfileResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/users/{userId}/avatar:
    post:
      summary: Upload user avatar
      description: Allows a user to upload an avatar image
      tags:
        - "Users"
      operationId: uploadUserAvatar
      parameters:
        - name: userId
          in: path
          required: true
          description: Unique identifier of the user
          schema:
            type: integer
            format: int64
      requestBody:
        description: This is the request body for uploading an avatar
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
      responses:
        "200":
          description: "OK - Successfully uploaded user avatar"
          content:
            application/json:
              schema:
                type: object
                properties:
                  avatar_url:
                    type: string
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    InfoHolder:
      description: This is an object holding the version information
      type: object
      properties:
        appBuildversion:
          type: string
        appBuildTime:
          type: string
    ErrorResponse:
      description: This is the response object in case of errors, compliant with RFC7807
      type: object
      properties:
        error:
          $ref: "#/components/schemas/ErrorData"
    ErrorData:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
    TokenResponse:
      type: object
      properties:
        data:
          type: string
        error:
          $ref: "#/components/schemas/ErrorData"
    UserLogin:
      description: This is a UserLogin object
      type: object
      properties:
        email:
          type: string
          format: email
          pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
        password:
          type: string
          minLength: 8
          maxLength: 50
    UserRegistration:
      description: This is a UserRegistration object
      type: object
      properties:
        firstName:
          type: string
          pattern: '^[a-zA-Z]{3,15}$'
        password:
          type: string
          minLength: 8
          maxLength: 50
        email:
          type: string
          format: email
          pattern: '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    UserProfileResponse:
      type: object
      properties:
        userId:
          type: integer
        firstName:
          type: string
          pattern: '^[a-zA-Z]{3,15}$'
        username:
          type: string
        email:
          type: string
        profile_picture_url:
          type: string
          nullable: true
    UserProfileUpdate:
      type: object
      properties:
        name:
          type: object
          properties:
            first:
              type: string
        address:
          type: object
          properties:
            country:
              type: string
            city:
              type: string
      required:
        - name
        - address

  responses:
    SystemInfoResponse:
      description: "System Version Response"
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: "#/components/schemas/InfoHolder"
    BadRequest:
      description: "BAD REQUEST"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: "UNAUTHORIZED"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: "FORBIDDEN"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: "NOT FOUND"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: "INTERNAL SERVER ERROR"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

security:
  - BearerAuth: [ ]