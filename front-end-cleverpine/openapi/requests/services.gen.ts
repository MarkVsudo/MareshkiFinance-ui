// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { $OpenApiTs } from './types.gen';

export class SystemService {
    /**
     * This is a healtheck method
     * This method returns a 200 respponse for healthceck purposes
     * @returns string OK
     * @throws ApiError
     */
    public static getApiSystemHealth(): CancelablePromise<$OpenApiTs['/api/system/health']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/system/health'
        });
    }
    
    /**
     * This is a version method
     * This method returns the current application version
     * @returns unknown System Version Response
     * @throws ApiError
     */
    public static getApiSystemInfo(): CancelablePromise<$OpenApiTs['/api/system/info']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/system/info'
        });
    }
    
}

export class UsersService {
    /**
     * This is a user login method
     * This is a method for user login
     * @param data The data for the request.
     * @param data.requestBody This is a user login request body
     * @returns TokenResponse OK
     * @throws ApiError
     */
    public static login(data: $OpenApiTs['/api/users/login']['post']['req']): CancelablePromise<$OpenApiTs['/api/users/login']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/users/login',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'BAD REQUEST',
                401: 'UNAUTHORIZED',
                403: 'FORBIDDEN',
                500: 'INTERNAL SERVER ERROR'
            }
        });
    }
    
    /**
     * This is a user registration method
     * This is a method for user registration
     * @param data The data for the request.
     * @param data.requestBody This is a user registration request body
     * @returns TokenResponse Created
     * @throws ApiError
     */
    public static register(data: $OpenApiTs['/api/users/register']['post']['req']): CancelablePromise<$OpenApiTs['/api/users/register']['post']['res'][201]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/users/register',
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'BAD REQUEST',
                409: 'Conflict',
                422: 'Unprocessable Entity',
                500: 'INTERNAL SERVER ERROR'
            }
        });
    }
    
    /**
     * Get user profile information
     * Retrieves the profile information of a user by their unique ID
     * @param data The data for the request.
     * @param data.userId Unique identifier of the user
     * @returns UserProfileResponse OK - Successfully retrieved user profile
     * @throws ApiError
     */
    public static getUserProfile(data: $OpenApiTs['/api/users/{userId}']['get']['req']): CancelablePromise<$OpenApiTs['/api/users/{userId}']['get']['res'][200]> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/users/{userId}',
            path: {
                userId: data.userId
            },
            errors: {
                400: 'BAD REQUEST',
                401: 'UNAUTHORIZED',
                403: 'FORBIDDEN',
                404: 'NOT FOUND',
                500: 'INTERNAL SERVER ERROR'
            }
        });
    }
    
    /**
     * Update user profile
     * Allows a user to update their profile information
     * @param data The data for the request.
     * @param data.userId Unique identifier of the user
     * @param data.requestBody This is the request body to update user profile
     * @returns UserProfileResponse OK - Successfully updated user profile
     * @throws ApiError
     */
    public static updateUserProfile(data: $OpenApiTs['/api/users/{userId}']['put']['req']): CancelablePromise<$OpenApiTs['/api/users/{userId}']['put']['res'][200]> {
        return __request(OpenAPI, {
            method: 'PUT',
            url: '/api/users/{userId}',
            path: {
                userId: data.userId
            },
            body: data.requestBody,
            mediaType: 'application/json',
            errors: {
                400: 'BAD REQUEST',
                401: 'UNAUTHORIZED',
                403: 'FORBIDDEN',
                404: 'NOT FOUND',
                500: 'INTERNAL SERVER ERROR'
            }
        });
    }
    
    /**
     * Upload user avatar
     * Allows a user to upload an avatar image
     * @param data The data for the request.
     * @param data.userId Unique identifier of the user
     * @param data.formData This is the request body for uploading an avatar
     * @returns unknown OK - Successfully uploaded user avatar
     * @throws ApiError
     */
    public static uploadUserAvatar(data: $OpenApiTs['/api/users/{userId}/avatar']['post']['req']): CancelablePromise<$OpenApiTs['/api/users/{userId}/avatar']['post']['res'][200]> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/api/users/{userId}/avatar',
            path: {
                userId: data.userId
            },
            formData: data.formData,
            mediaType: 'multipart/form-data',
            errors: {
                400: 'BAD REQUEST',
                401: 'UNAUTHORIZED',
                403: 'FORBIDDEN',
                404: 'NOT FOUND',
                500: 'INTERNAL SERVER ERROR'
            }
        });
    }
    
}