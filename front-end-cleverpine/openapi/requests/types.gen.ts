// This file is auto-generated by @hey-api/openapi-ts

/**
 * This is an object holding the version information
 */
export type InfoHolder = {
    appBuildversion?: string;
    appBuildTime?: string;
};

/**
 * This is the response object in case of errors, compliant with RFC7807
 */
export type ErrorResponse = {
    error?: ErrorData;
};

export type ErrorData = {
    type?: string;
    title?: string;
    status?: number;
    detail?: string;
};

export type TokenResponse = {
    data?: string;
    error?: ErrorData;
};

/**
 * This is a UserLogin object
 */
export type UserLogin = {
    email?: string;
    password?: string;
};

/**
 * This is a UserRegistration object
 */
export type UserRegistration = {
    firstName?: string;
    password?: string;
    email?: string;
};

export type UserProfileResponse = {
    userId?: number;
    firstName?: string;
    username?: string;
    email?: string;
    profile_picture_url?: string | null;
};

export type UserProfileUpdate = {
    name: {
        first?: string;
    };
    address: {
        country?: string;
        city?: string;
    };
};

export type $OpenApiTs = {
    '/api/system/health': {
        get: {
            res: {
                /**
                 * OK
                 */
                200: string;
            };
        };
    };
    '/api/system/info': {
        get: {
            res: {
                /**
                 * System Version Response
                 */
                200: {
                    data?: InfoHolder;
                };
            };
        };
    };
    '/api/users/login': {
        post: {
            req: {
                /**
                 * This is a user login request body
                 */
                requestBody: UserLogin;
            };
            res: {
                /**
                 * OK
                 */
                200: TokenResponse;
                /**
                 * BAD REQUEST
                 */
                400: ErrorResponse;
                /**
                 * UNAUTHORIZED
                 */
                401: ErrorResponse;
                /**
                 * FORBIDDEN
                 */
                403: ErrorResponse;
                /**
                 * INTERNAL SERVER ERROR
                 */
                500: ErrorResponse;
            };
        };
    };
    '/api/users/register': {
        post: {
            req: {
                /**
                 * This is a user registration request body
                 */
                requestBody: UserRegistration;
            };
            res: {
                /**
                 * Created
                 */
                201: TokenResponse;
                /**
                 * BAD REQUEST
                 */
                400: ErrorResponse;
                /**
                 * Conflict
                 */
                409: unknown;
                /**
                 * Unprocessable Entity
                 */
                422: unknown;
                /**
                 * INTERNAL SERVER ERROR
                 */
                500: ErrorResponse;
            };
        };
    };
    '/api/users/{userId}': {
        get: {
            req: {
                /**
                 * Unique identifier of the user
                 */
                userId: number;
            };
            res: {
                /**
                 * OK - Successfully retrieved user profile
                 */
                200: UserProfileResponse;
                /**
                 * BAD REQUEST
                 */
                400: ErrorResponse;
                /**
                 * UNAUTHORIZED
                 */
                401: ErrorResponse;
                /**
                 * FORBIDDEN
                 */
                403: ErrorResponse;
                /**
                 * NOT FOUND
                 */
                404: ErrorResponse;
                /**
                 * INTERNAL SERVER ERROR
                 */
                500: ErrorResponse;
            };
        };
        put: {
            req: {
                /**
                 * This is the request body to update user profile
                 */
                requestBody: UserProfileUpdate;
                /**
                 * Unique identifier of the user
                 */
                userId: number;
            };
            res: {
                /**
                 * OK - Successfully updated user profile
                 */
                200: UserProfileResponse;
                /**
                 * BAD REQUEST
                 */
                400: ErrorResponse;
                /**
                 * UNAUTHORIZED
                 */
                401: ErrorResponse;
                /**
                 * FORBIDDEN
                 */
                403: ErrorResponse;
                /**
                 * NOT FOUND
                 */
                404: ErrorResponse;
                /**
                 * INTERNAL SERVER ERROR
                 */
                500: ErrorResponse;
            };
        };
    };
    '/api/users/{userId}/avatar': {
        post: {
            req: {
                /**
                 * This is the request body for uploading an avatar
                 */
                formData: {
                    avatar?: (Blob | File);
                };
                /**
                 * Unique identifier of the user
                 */
                userId: number;
            };
            res: {
                /**
                 * OK - Successfully uploaded user avatar
                 */
                200: {
                    avatar_url?: string;
                };
                /**
                 * BAD REQUEST
                 */
                400: ErrorResponse;
                /**
                 * UNAUTHORIZED
                 */
                401: ErrorResponse;
                /**
                 * FORBIDDEN
                 */
                403: ErrorResponse;
                /**
                 * NOT FOUND
                 */
                404: ErrorResponse;
                /**
                 * INTERNAL SERVER ERROR
                 */
                500: ErrorResponse;
            };
        };
    };
};